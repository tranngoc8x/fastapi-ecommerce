version: '3.8'

services:
  api:
    build: .
    container_name: fastapi_app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ecommerce
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - APP_NAME=${APP_NAME:-E-commerce API}
      - DEBUG=${DEBUG:-True}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-localhost:9092}
      - KAFKA_PRODUCT_TOPIC=${KAFKA_PRODUCT_TOPIC:-product-events}
      - KAFKA_ORDER_TOPIC=${KAFKA_ORDER_TOPIC:-order-events}
      - KAFKA_USER_TOPIC=${KAFKA_USER_TOPIC:-user-events}
    networks:
      - app-network
    restart: always

  db:
    image: postgres:14
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network
    restart: always

  redis:
    image: redis:6-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A app.core.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ecommerce
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-localhost:9092}
      - KAFKA_PRODUCT_TOPIC=${KAFKA_PRODUCT_TOPIC:-product-events}
      - KAFKA_ORDER_TOPIC=${KAFKA_ORDER_TOPIC:-order-events}
      - KAFKA_USER_TOPIC=${KAFKA_USER_TOPIC:-user-events}
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
